Author - Ashutosh singh
Subject - initialise repo by command 

------------------------------------------{Init by Cmd using git cmd and vscode} -----------------------------------

* first create a folder on desktop.
* go to the github and create a new repo.
* copy the SSH link.
* open vscode create file 

---------------------------------------------{for init the git in project} ----------------------------------------

for inti the git in project use command.
         open vscode terminal type command 
                                     {git init} (------this cmd initialise the git in folder)

* now you the SSH file from repo used sfter this
        use cmd 
              {git remote add origin <-SSH link->}

* now check the remote version
       use the cmd for check version of remote 
                    {git remote -v}
     it show somethings like this
                 origin  https://github.com/Ashutosh125896/gitnew.git (fetch)
                 origin  https://github.com/Ashutosh125896/gitnew.git (push)

---------------------------------------------------------{Branch}--------------------------------------------------

* what is branch?
 branch is like tree, but in git hub Branch is a repo where developer commit there chnages code 
 *master branch is a main branch where all developer can not push the code direct they first push the code in there 
  brach like {main branch} 

                              ......................command for branch...........................
                        
* check the branch of repo  {to check branch}
                        use cmd 
                         {git branch}

                            .................{to set new branch}...............................

* for set new brach in master branch
                        use command 
                             {git branch -M main}   .....(to rename brach).....

* to push origin main
                use cmd to push code in branch main
                               {git push origin main}  


        ---------------------------------------{NOTE}---------------------------------
        IF YOU WORKIN IN A DIRECTORY FOR LONG TIME THEN DOES NOT USE THE COMMAND {git push origin main}
        use the command {git push -u origin main}, after this you need to use only the coomand {git push}
        it work like alias.....
        *** {git push origin main} ==is equal to===  {git push -u origin main} ==is equal to== {git push}***                     
                        
                         git push --set-upstream origin main
                         To have this happen automatically for branches without a tracking
                         upstream, see 'push.autoSetupRemote' in 'git help config'.

    ------------------------------{branch command} -----------------------------------------

    *git branch - to check which branch is currently user working
    *git branch -M main  - to rename new branch

      * for create a new branch 
                    use the cmd 
                     -----------  {git checkout -b <-new branch name->}
                       eg: git checkout -b f3
                       {it create new branch} in repo

    *git checkout <-branch name->
                     ----------{*git checkout <-branch name->}
                      NOTE:- if i have 2 or more then 2 branch then we use the command to navigate on branch
                      firat branch {f1} and second branch is {f2} then and user is working on {f1} and wnat to
                      naviagte on {f2} the use the cmd
                               from this--{f1} ---- to
                             this  -----{git checkout f2}----

* if user wnat to delete the branch 
                     use this command 
                            ---------------- {git branch -d f2}
                            this cmd is used for delete the brach f2 from the repo  


    =======================================Merging cmd====================================
    
While working on a project there are many developer how work on othrs features and every one use different repo in there
local machine.
then user pull the repo code in there local machine and when upload the changes file into the repo then there many file 
are uploaded by others developer of there changes. then need to merge the code at one place

eg:       -------------------------------------------------------------------------------------------------------

like project has one main repo with name {P1} and {d1} is clone the repo in machin and then {d2}, {d3} also clone the project
and working on diff features

branch name {P1}...{p2}...{p3}...{p4}      {p7}...{p8}
                                  {p5}...{p6}

                                  now from {p4} to{p7} are work by other developer and wants to merge the code


                                  here hero comes to picture name with {MERGE} it merge the file in sequance 
        ----------    {p1}...{p2}...{p3}...{p4}...{p5}...{p6}...{p7}...{p8}  -------------------

        There are two way to merge the code

        WAY 1

        * git diff <-branch name ->
                                   (to compare commits, branch, and files and more)
        *git merge <branch name->  
                                   (to merge 2 branch)

    WAY 2
    using PR from the github platform 
    PR = Pull Request
